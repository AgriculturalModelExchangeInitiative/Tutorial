import  java.io.*;
import  java.util.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;

public void Process()
{
    double tgAI = gAI.getValue();
    double tdeltaTT = deltaTT.getValue();
    double tpastMaxAI = pastMaxAI.getValue();
    List<Double> tlistTTShootWindowForPTQ = listTTShootWindowForPTQ.getValue();
    List<Double> tlistGAITTWindowForPTQ = listGAITTWindowForPTQ.getValue();
    double tgAImean = gAImean.getValue();
    List<Double> TTList = new ArrayList<>(Arrays.asList());
    List<Double> GAIList = new ArrayList<>(Arrays.asList());
    double SumTT;
    int count = 0;
    double gai_ = 0.0d;
    double gaiMean_ = 0.0d;
    int countGaiMean = 0;
    int i;
    for (i=0 ; i<tlistTTShootWindowForPTQ.size() ; i+=1)
    {
        TTList.add(tlistTTShootWindowForPTQ.get(i));
        GAIList.add(tlistGAITTWindowForPTQ.get(i));
    }
    TTList.add(tdeltaTT);
    GAIList.add(tgAI);
    SumTT = TTList.stream().mapToDouble(Double::doubleValue).sum();
    while ( SumTT > ttTWindowForPTQ)
    {
        SumTT = SumTT - TTList.get(count);
        count = count + 1;
    }
    tlistTTShootWindowForPTQ = new ArrayList<>(Arrays.asList());
    tlistGAITTWindowForPTQ = new ArrayList<>(Arrays.asList());
    for (i=count ; i<TTList.size() ; i+=1)
    {
        tlistTTShootWindowForPTQ.add(TTList.get(i));
        tlistGAITTWindowForPTQ.add(GAIList.get(i));
    }
    for (i=0 ; i<tlistGAITTWindowForPTQ.size() ; i+=1)
    {
        gaiMean_ = gaiMean_ + tlistGAITTWindowForPTQ.get(i);
        countGaiMean = countGaiMean + 1;
    }
    gaiMean_ = gaiMean_ / countGaiMean;
    gai_ = Math.max(tpastMaxAI, gaiMean_);
    tpastMaxAI = gai_;
    tgAImean = gai_;
    pastMaxAI.setValue(tpastMaxAI);listTTShootWindowForPTQ.setValue(tlistTTShootWindowForPTQ);listGAITTWindowForPTQ.setValue(tlistGAITTWindowForPTQ);gAImean.setValue(tgAImean);
}